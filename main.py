import os
import logging
import re
import time
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, ConversationHandler, CallbackContext
from telegram.error import TelegramError
import requests
from bs4 import BeautifulSoup

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
if not BOT_TOKEN:
    logger.error("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN")
    exit(1)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
AUTOSTART, CONTROL, GPS, PHONE = range(4)
user_data = {}

# –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
PRODUCTS_DATA = [
    {'name': 'Pandora DX-40R', 'autostart': 0, 'remote': 1, 'gsm': 0, 'gps': 0,
     'link': 'https://ya7auto.ru/auto-security/car-alarms/pandora-dx-40r/'},
    {'name': 'Pandora DX-40RS', 'autostart': 1, 'remote': 1, 'gsm': 0, 'gps': 0,
     'link': 'https://ya7auto.ru/auto-security/car-alarms/pandora-dx-40rs/'},
    {'name': 'PanDECT X-1800L v4 Light', 'autostart': 1, 'remote': 0, 'gsm': 1, 'gps': 0,
     'link': 'https://ya7auto.ru/auto-security/car-alarms/pandect-x-1800l-v4-light/'},
    {'name': 'Pandora VX 4G Light', 'autostart': 1, 'remote': 0, 'gsm': 1, 'gps': 0,
     'link': 'https://ya7auto.ru/auto-security/car-alarms/pandora-vx-4g-light/'},
    {'name': 'Pandora VX-4G GPS v2', 'autostart': 1, 'remote': 0, 'gsm': 1, 'gps': 1,
     'link': 'https://ya7auto.ru/auto-security/car-alarms/pandora-vx-4g-gps-v2/'},
    {'name': 'Pandora VX 3100', 'autostart': 1, 'remote': 1, 'gsm': 1, 'gps': 1,
     'link': 'https://ya7auto.ru/auto-security/car-alarms/pandora-vx-3100/'},
    {'name': 'StarLine A63 v2 ECO', 'autostart': 0, 'remote': 1, 'gsm': 0, 'gps': 0,
     'link': 'https://ya7auto.ru/auto-security/car-alarms/starline-a63-v2-eco/'},
    {'name': 'StarLine –ê93 v2 ECO', 'autostart': 1, 'remote': 1, 'gsm': 0, 'gps': 0,
     'link': 'https://ya7auto.ru/auto-security/car-alarms/starline-a93-v2-eco/'},
    {'name': 'StarLine S96 v2 ECO', 'autostart': 1, 'remote': 0, 'gsm': 1, 'gps': 0,
     'link': 'https://ya7auto.ru/auto-security/car-alarms/starline-s96-v2-eco/'},
    {'name': 'StarLine S96 V2 LTE GPS', 'autostart': 1, 'remote': 0, 'gsm': 1, 'gps': 1,
     'link': 'https://ya7auto.ru/auto-security/car-alarms/starline-s96-v2-lte-gps/'}
]


def send_to_crm(phone_number, user_name=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ CRM —á–µ—Ä–µ–∑ –≤–µ–±-—Ñ–æ—Ä–º—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ ID –ø–æ–ª–µ–π"""
    url = "https://ya7auto.ru/crm/form/iframe/3/"

    # –ï—Å–ª–∏ –∏–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º "–ö–ª–∏–µ–Ω—Ç –∏–∑ Telegram"
    if not user_name:
        user_name = "–ö–ª–∏–µ–Ω—Ç –∏–∑ Telegram"

    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ ID –ø–æ–ª–µ–π
    form_data = {
        'firstname': user_name,  # ID –ø–æ–ª—è –¥–ª—è –∏–º–µ–Ω–∏
        'phone': phone_number,  # ID –ø–æ–ª—è –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        'form_id': '3',  # ID —Ñ–æ—Ä–º—ã –∏–∑ URL
        'utm_source': 'telegram_bot',
        'utm_medium': 'bot',
        'utm_campaign': 'auto_selection',
        'comment': '–ó–∞—è–≤–∫–∞ –∏–∑ Telegram-–±–æ—Ç–∞ –ø–æ –ø–æ–¥–±–æ—Ä—É –∞–≤—Ç–æ—Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–π'
    }

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∫–∞–∫ —É –±—Ä–∞—É–∑–µ—Ä–∞
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'Content-Type': 'application/x-www-form-urlencoded',
        'Referer': 'https://ya7auto.ru/',
    }

    try:
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ CRM: {form_data}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å —Å –¥–∞–Ω–Ω—ã–º–∏ —Ñ–æ—Ä–º—ã
        response = requests.post(url, data=form_data, headers=headers, timeout=15)

        logger.info(f"–û—Ç–≤–µ—Ç CRM: {response.status_code}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–æ —Å—Ç–∞—Ç—É—Å—É –∫–æ–¥—É
        if response.status_code == 200:
            logger.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ CRM")
            return True
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã: {response.status_code}")
            return False

    except Exception as e:
        logger.error(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ CRM: {str(e)}")
        return False


def validate_phone_number(phone):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    digits = re.sub(r'\D', '', str(phone))

    if len(digits) == 11:
        if digits.startswith('7'):
            return f"+7{digits[1:]}"
        elif digits.startswith('8'):
            return f"+7{digits[1:]}"
    elif len(digits) == 10:
        return f"+7{digits}"

    return None


def start(update: Update, context: CallbackContext) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –æ–ø—Ä–æ—Å, –∑–∞–¥–∞–µ—Ç –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å."""
    user = update.message.from_user
    update.message.reply_text(
        f"üëãüèª –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, {user.first_name}!\n\n"
        "–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–≤–æ–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è!\n\n"
        "ü¶æ –î–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏\n\n"
        "‚òÄÔ∏è –ü–æ–¥–∞–≤–ª—è—é—â–µ–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤—ã–±–∏—Ä–∞—é—Ç —Å–∏—Å—Ç–µ–º—É —Å –≥–ª–∞–≤–Ω–æ–π —Ü–µ–ª—å—é ‚Äî —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –¥–≤–∏–≥–∞—Ç–µ–ª—è.\n\n"
        "–í –Ω–∞—à–µ–º –∫–ª–∏–º–∞—Ç–µ –ø—Ä–æ–≥—Ä–µ–≤ –¥–≤–∏–≥–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –ø–æ–µ–∑–¥–∫–æ–π ‚Äî —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å. –î–∞–∂–µ –ø—Ä–∏ –Ω–µ–±–æ–ª—å—à–æ–º –º–∏–Ω—É—Å–µ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Å–Ω–∏–∂–∞–µ—Ç –∏–∑–Ω–æ—Å –º–æ—Ç–æ—Ä–∞.\n\n"
        "–ù—É –∏ –∫–æ–Ω–µ—á–Ω–æ, —Å–∞–¥–∏—Ç—å—Å—è –≤ —É–∂–µ —Ç—ë–ø–ª—ã–π –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π —Å–∞–ª–æ–Ω ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—è—Ç–Ω–æ.\n\n"
        "–ö–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞—Å –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ?",
        reply_markup=ReplyKeyboardMarkup(
            [["–° –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º", "–ë–ï–ó –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"]],
            one_time_keyboard=True,
            resize_keyboard=True
        ),
    )
    return AUTOSTART


def autostart_choice(update: Update, context: CallbackContext) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –∏ –∑–∞–¥–∞–µ—Ç –≤—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å."""
    choice = update.message.text
    user_id = update.message.from_user.id
    user_data[user_id] = {'autostart': 1 if choice == '–° –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º' else 0}

    update.message.reply_text(
        "üì° –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º —Å–ø–æ—Å–æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n\n"
        "üôÑ –ï—Å—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥ ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –±—Ä–µ–ª–æ–∫–∞ —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏. –ï–≥–æ –º–∏–Ω—É—Å –≤ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–º —Å–∏–≥–Ω–∞–ª–µ: –µ—Å—Ç—å —Ä–∏—Å–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ —Ç—Ä–µ–≤–æ–≥–µ. –ü–æ—ç—Ç–æ–º—É –º—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –±–æ–ª–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞.\n\n"
        "‚ò∫Ô∏è –ß–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç—ã —Å–º–æ–∂–µ—à—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∏ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –∞–≤—Ç–æ, –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Å—Ç–∞—Ç—É—Å, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –¥–∞—Ç—á–∏–∫–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ. –ì–ª–∞–≤–Ω–æ–µ ‚Äî —Ç—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ–ª—É—á–∏—à—å –ø—É—à-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ª—é–±–æ–º –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–∏, –≥–¥–µ –±—ã —Ç—ã –Ω–∏ –±—ã–ª.\n\n"
        "–ö–∞–∫ –≤–∞–º —É–¥–æ–±–Ω–µ–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–∏—Å—Ç–µ–º–æ–π?",
        reply_markup=ReplyKeyboardMarkup(
            [["üòé –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ", "üì∫ –ë—Ä–µ–ª–æ–∫"]],
            one_time_keyboard=True,
            resize_keyboard=True
        ),
    )
    return CONTROL


def control_choice(update: Update, context: CallbackContext) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –∑–∞–¥–∞–µ—Ç —Ç—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å."""
    choice = update.message.text
    user_id = update.message.from_user.id
    user_data[user_id]['control'] = 'app' if '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ' in choice else 'remote'

    update.message.reply_text(
        "üî• –û—Ç–ª–∏—á–Ω–æ! –ú—ã –ø–æ—á—Ç–∏ –ø–æ–¥–æ–±—Ä–∞–ª–∏ —Ç–≤–æ—é –∏–¥–µ–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É. –û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥.\n\n"
        "–ï—Å–ª–∏ —Ç—ã —á–∞—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—à—å –∫–ª—é—á–∏ –¥—Ä—É–≥–∏–º –ª—é–¥—è–º –∏–ª–∏ —Ç–µ–±–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫–∞–∂–¥–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, —Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —Å–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º GPS-–º–æ–¥—É–ª–µ–º.\n\n"
        "–û–Ω –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤–∏–¥–µ—Ç—å —Ç–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã, –∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –µ–µ –ø–æ–µ–∑–¥–∫–∏.\n\n"
        "–ù—É–∂–µ–Ω –ª–∏ –≤–∞–º GPS-–º–æ–¥—É–ª—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è?",
        reply_markup=ReplyKeyboardMarkup(
            [["–î–∞, –Ω—É–∂–µ–Ω GPS", "–ù–µ—Ç, –Ω–µ –Ω—É–∂–µ–Ω"]],
            one_time_keyboard=True,
            resize_keyboard=True
        ),
    )
    return GPS


def gps_choice(update: Update, context: CallbackContext) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä GPS, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω."""
    choice = update.message.text
    user_id = update.message.from_user.id
    user_data[user_id]['gps'] = 1 if '–î–∞' in choice else 0

    user_prefs = user_data[user_id]
    recommended_products = []

    # –õ–æ–≥–∏–∫–∞ –ø–æ–¥–±–æ—Ä–∞
    for product in PRODUCTS_DATA:
        if user_prefs['autostart'] == 1 and product['autostart'] == 0:
            continue
        if user_prefs['control'] == 'app' and product['gsm'] == 0:
            continue
        if user_prefs['gps'] == 1 and product['gps'] == 0:
            continue

        recommended_products.append(product)
        if len(recommended_products) == 2:
            break

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
    if recommended_products:
        message_text = "–í–æ—Ç –æ—Ç–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –≤–∞—Å:\n\n"
        for prod in recommended_products:
            message_text += f"‚Ä¢ <a href='{prod['link']}'>{prod['name']}</a>\n"
        message_text += "\n–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –æ—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
    else:
        message_text = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ –≤–∞—à–∏–º –∑–∞–ø—Ä–æ—Å–∞–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–∏—Å—Ç–µ–º. –û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏ –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å –ø–æ–¥–±–æ—Ä–æ–º –≤—Ä—É—á–Ω—É—é."

    update.message.reply_text(message_text, parse_mode='HTML', disable_web_page_preview=True)

    update.message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞.",
        reply_markup=ReplyKeyboardMarkup(
            [[KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä", request_contact=True)], ["–í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é"]],
            one_time_keyboard=True,
            resize_keyboard=True
        ),
    )
    return PHONE


def get_phone(update: Update, context: CallbackContext) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ CRM."""
    phone_number = None
    user = update.message.from_user
    user_name = f"{user.first_name} {user.last_name}" if user.last_name else user.first_name

    if update.message.contact:
        phone_number = validate_phone_number(update.message.contact.phone_number)
    elif update.message.text == "–í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é":
        update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXX...",
            reply_markup=ReplyKeyboardMarkup([["–û—Ç–º–µ–Ω–∞"]], resize_keyboard=True)
        )
        return PHONE
    elif update.message.text != "–û—Ç–º–µ–Ω–∞":
        phone_number = validate_phone_number(update.message.text)

    if not phone_number:
        update.message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXX...")
        return PHONE

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∏–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞
    update.message.reply_text("‚åõ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ CRM...")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ CRM (–∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω)
    success = send_to_crm(phone_number, user_name)

    if success:
        update.message.reply_text(
            "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–Ω—è—Ç—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –º–µ–Ω–µ–¥–∂–µ—Ä—É. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!\n\n"
            "–î–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ /start",
            reply_markup=ReplyKeyboardMarkup([[]], resize_keyboard=True)
        )
    else:
        update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.\n\n"
            "–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞–∂–º–∏—Ç–µ /start",
            reply_markup=ReplyKeyboardMarkup([[]], resize_keyboard=True)
        )

    return ConversationHandler.END


def cancel(update: Update, context: CallbackContext) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç –æ–ø—Ä–æ—Å."""
    update.message.reply_text(
        '–î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start.',
        reply_markup=ReplyKeyboardMarkup([[]], resize_keyboard=True)
    )
    return ConversationHandler.END


def error_handler(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏."""
    logger.error("–û—à–∏–±–∫–∞:", exc_info=context.error)


def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ polling —Ä–µ–∂–∏–º–µ"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ polling —Ä–µ–∂–∏–º–µ...")

    # –°–æ–∑–¥–∞–µ–º Updater (—Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è PTB)
    updater = Updater(BOT_TOKEN, use_context=True)

    # –ü–æ–ª—É—á–∞–µ–º dispatcher –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dp = updater.dispatcher
    dp.add_error_handler(error_handler)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            AUTOSTART: [MessageHandler(Filters.regex('^(–° –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º|–ë–ï–ó –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞)$'), autostart_choice)],
            CONTROL: [MessageHandler(Filters.regex('^(üòé –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ|üì∫ –ë—Ä–µ–ª–æ–∫)$'), control_choice)],
            GPS: [MessageHandler(Filters.regex('^(–î–∞, –Ω—É–∂–µ–Ω GPS|–ù–µ—Ç, –Ω–µ –Ω—É–∂–µ–Ω)$'), gps_choice)],
            PHONE: [
                MessageHandler(Filters.contact, get_phone),
                MessageHandler(Filters.text & ~Filters.command, get_phone)
            ],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    dp.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º polling
    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
    updater.start_polling()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –¥–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    updater.idle()


if __name__ == '__main__':
    main()