import logging
import os
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, ConversationHandler, CallbackContext
from form_handler import SimpleFormHandler
from config import BOT_TOKEN, FORM_URL

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
AUTO_START, CONTROL, GPS, PHONE, RESTART = range(5)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
def recommend_systems(answers):
    systems = [
        # Pandora —Å–∏—Å—Ç–µ–º—ã —Å —Ç–æ—á–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
        {"name": "Pandora DX-40R", "brand": "pandora", "autostart": 0, "brelok": 1, "gsm": 0, "gps": 0,
         "price": "10 500 ‚ÇΩ", "link": "https://ya7auto.ru/auto-security/car-alarms/pandora-dx-40r/"},
        {"name": "Pandora DX-40RS", "brand": "pandora", "autostart": 1, "brelok": 1, "gsm": 0, "gps": 0,
         "price": "13 200 ‚ÇΩ", "link": "https://ya7auto.ru/auto-security/car-alarms/pandora-dx-40rs/"},
        {"name": "PanDECT X-1800L v4 Light", "brand": "pandora", "autostart": 1, "brelok": 0, "gsm": 1, "gps": 0,
         "price": "18 900 ‚ÇΩ", "link": "https://ya7auto.ru/auto-security/car-alarms/pandect-x-1800l-v4-light/"},
        {"name": "Pandora VX 4G Light", "brand": "pandora", "autostart": 1, "brelok": 0, "gsm": 1, "gps": 0,
         "price": "21 500 ‚ÇΩ", "link": "https://ya7auto.ru/auto-security/car-alarms/pandora-vx-4g-light/"},
        {"name": "Pandora VX-4G GPS v2", "brand": "pandora", "autostart": 1, "brelok": 0, "gsm": 1, "gps": 1,
         "price": "26 800 ‚ÇΩ", "link": "https://ya7auto.ru/auto-security/car-alarms/pandora-vx-4g-gps-v2/"},
        {"name": "Pandora VX 3100", "brand": "pandora", "autostart": 1, "brelok": 1, "gsm": 1, "gps": 1,
         "price": "29 500 ‚ÇΩ", "link": "https://ya7auto.ru/auto-security/car-alarms/pandora-vx-3100/"},

        # Starline —Å–∏—Å—Ç–µ–º—ã —Å —Ç–æ—á–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
        {"name": "StarLine A63 v2 ECO", "brand": "starline", "autostart": 0, "brelok": 1, "gsm": 0, "gps": 0,
         "price": "9 800 ‚ÇΩ", "link": "https://ya7auto.ru/auto-security/car-alarms/starline-a63-v2-eco/"},
        {"name": "StarLine –ê93 v2 ECO", "brand": "starline", "autostart": 1, "brelok": 1, "gsm": 0, "gps": 0,
         "price": "12 900 ‚ÇΩ", "link": "https://ya7auto.ru/auto-security/car-alarms/starline-a93-v2-eco/"},
        {"name": "StarLine S96 v2 ECO", "brand": "starline", "autostart": 1, "brelok": 0, "gsm": 1, "gps": 0,
         "price": "17 200 ‚ÇΩ", "link": "https://ya7auto.ru/auto-security/car-alarms/starline-s96-v2-eco/"},
        {"name": "StarLine S96 V2 LTE GPS", "brand": "starline", "autostart": 1, "brelok": 0, "gsm": 1, "gps": 1,
         "price": "23 700 ‚ÇΩ", "link": "https://ya7auto.ru/auto-security/car-alarms/starline-s96-v2-lte-gps/"}
    ]

    # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Å—Ç—Ä–æ–≥–æ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ –≤—Å–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º
    perfect_matches = []
    for system in systems:
        if (system['autostart'] == answers.get('autostart') and
                (system['brelok'] == answers.get('control') or system['gsm'] == answers.get('control')) and
                system['gps'] == answers.get('gps')):
            perfect_matches.append(system)

    # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Å–∏—Å—Ç–µ–º—ã - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Ö
    if perfect_matches:
        return perfect_matches

    # –ï—Å–ª–∏ –Ω–µ—Ç —Å—Ç—Ä–æ–≥–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º GPS —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É
    matches_without_gps = []
    for system in systems:
        if (system['autostart'] == answers.get('autostart') and
                (system['brelok'] == answers.get('control') or system['gsm'] == answers.get('control'))):
            matches_without_gps.append(system)

    return matches_without_gps


def start(update: Update, context: CallbackContext) -> int:
    user = update.message.from_user
    context.user_data['user_name'] = user.first_name or user.username
    context.user_data['user_answers'] = {}

    # –°–æ–æ–±—â–µ–Ω–∏–µ 1.1
    update.message.reply_text(f"üëãüèª –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –Ω–∞ —Ç–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å!")

    # –°–æ–æ–±—â–µ–Ω–∏–µ 1.2
    update.message.reply_text("‚ÅâÔ∏è –î–∞–≤–∞–π —Ä–µ—à–∏–º, —á—Ç–æ –¥–æ–ª–∂–Ω–∞ —É–º–µ—Ç—å —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è?")

    # –°–æ–æ–±—â–µ–Ω–∏–µ 1.3
    update.message.reply_text("1Ô∏è‚É£ –ù—É–∂–µ–Ω –ª–∏ —Ç–µ–±–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫?")

    # –°–æ–æ–±—â–µ–Ω–∏–µ 1.4
    update.message.reply_text(
        "‚ùÑÔ∏è –í —É—Å–ª–æ–≤–∏—è—Ö –Ω–∞—à–µ–≥–æ –∫–ª–∏–º–∞—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≥—Ä–µ–≤–∞—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥ –ø–æ–µ–∑–¥–∫–æ–π. –î–∞–∂–µ –µ—Å–ª–∏ –Ω–∞ —É–ª–∏—Ü–µ –Ω–µ—Å–∏–ª—å–Ω—ã–π –º–æ—Ä–æ–∑! –≠—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç –∏–∑–Ω–æ—Å –¥–≤–∏–≥–∞—Ç–µ–ª—è.\n\n"
        "–í –∫–æ–Ω—Ü–µ –∫–æ–Ω—Ü–æ–≤ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—è—Ç–Ω–æ —Å—ä–µ—Å—Ç—å –≤ –ø—Ä–æ–≥—Ä–µ—Ç—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å üòå\n\n"
        "‚ùì–ö–∞–∫—É—é —Å–∏—Å—Ç–µ–º—É –≤—ã–±–µ—Ä–µ—à—å?",
        reply_markup=ReplyKeyboardMarkup(
            [["üòâ –° –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º", "ü•∂ –ë–ï–ó –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
    )
    return AUTO_START


def autostart_choice(update: Update, context: CallbackContext) -> int:
    text = update.message.text
    if text == "üòâ –° –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º":
        context.user_data['user_answers']['autostart'] = 1
    else:
        context.user_data['user_answers']['autostart'] = 0

    # –°–æ–æ–±—â–µ–Ω–∏–µ 2.1
    update.message.reply_text("2Ô∏è‚É£ –ö–∞–∫ –ø–ª–∞–Ω–∏—Ä—É–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–∏—Å—Ç–µ–º–æ–π? –ë—Ä–µ–ª–æ–∫ –∏–ª–∏ GSM-–º–æ–¥—É–ª—å")

    # –°–æ–æ–±—â–µ–Ω–∏–µ 2.2
    update.message.reply_text(
        "–ú–æ–∂–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å —á–µ—Ä–µ–∑ –±—Ä–µ–ª–æ–∫, –Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Ç–æ–º, —á—Ç–æ —Å–∏–≥–Ω–∞–ª —Ç—Ä–µ–≤–æ–≥–∏ –æ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è –¥–æ –±—Ä–µ–ª–∫–∞ –Ω–µ –≤—Å–µ–≥–¥–∞ —Å—Ç–∞–±–∏–ª–µ–Ω –∏ –µ—Å—Ç—å —à–∞–Ω—Å –Ω–µ –ø–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª —Ç—Ä–µ–≤–æ–≥–∏ ‚õîÔ∏è\n\n"
        "–ß–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ –≤ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ª—É—á–∞–µ —Ç—Ä–µ–≤–æ–≥–∏ –∏ —Å–º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ üëè\n\n"
        "–ß—Ç–æ –≤—ã–±–µ—Ä–µ—Ç–µ‚ùì",
        reply_markup=ReplyKeyboardMarkup(
            [["üòé –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ", "üìµ –ë—Ä–µ–ª–æ–∫"]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
    )
    return CONTROL


def control_choice(update: Update, context: CallbackContext) -> int:
    text = update.message.text
    if text == "üòé –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ":
        context.user_data['user_answers']['control'] = 1
    else:
        context.user_data['user_answers']['control'] = 0

    # –°–æ–æ–±—â–µ–Ω–∏–µ 3.1
    update.message.reply_text("üî•–û—Ç–ª–∏—á–Ω–æ, –æ—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å! 3Ô∏è‚É£ GPS-–∞–Ω—Ç–µ–Ω–Ω–∞")

    # –°–æ–æ–±—â–µ–Ω–∏–µ 3.2
    update.message.reply_text(
        "üó∫Ô∏è–ï—Å–ª–∏ –≤—ã —á–∞—Å—Ç–æ –¥–∞–µ—Ç–µ –º–∞—à–∏–Ω—É —á—É–∂–∏–µ —Ä—É–∫–∏ –∏ –≤–∞–º –≤–∞–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, —Ç–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —Å GPS.\n\n"
        "–í–∞—à –≤–∞—Ä–∏–∞–Ω—Ç‚ùì",
        reply_markup=ReplyKeyboardMarkup(
            [["üïµüèª‚Äç‚ôÇÔ∏è –° GPS- –∞–Ω—Ç–µ–Ω–Ω—ã", "üôà –ë–ï–ó GPS- –∞–Ω—Ç–µ–Ω–Ω—ã"]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
    )
    return GPS


def gps_choice(update: Update, context: CallbackContext) -> int:
    text = update.message.text
    if text == "üïµüèª‚Äç‚ôÇÔ∏è –° GPS- –∞–Ω—Ç–µ–Ω–Ω—ã":
        context.user_data['user_answers']['gps'] = 1
    else:
        context.user_data['user_answers']['gps'] = 0

    recommended = recommend_systems(context.user_data['user_answers'])

    if not recommended:
        update.message.reply_text(
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Å–∏—Å—Ç–µ–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.",
            reply_markup=ReplyKeyboardMarkup(
                [["üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"]],
                resize_keyboard=True,
                one_time_keyboard=True
            )
        )
        return RESTART

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
    answers = context.user_data['user_answers']
    functionality_text = "üîç –î–ª—è –≤–∞—Å –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏–º–µ–ª–∞ —Å–ª–µ–¥—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:\n\n"

    if answers.get('autostart') == 1:
        functionality_text += "‚Ä¢ üöó –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –¥–≤–∏–≥–∞—Ç–µ–ª—è\n"
    else:
        functionality_text += "‚Ä¢ üö´ –ë–µ–∑ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞\n"

    if answers.get('control') == 1:
        functionality_text += "‚Ä¢ üì± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (GSM)\n"
    else:
        functionality_text += "‚Ä¢ üìü –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±—Ä–µ–ª–æ–∫\n"

    if answers.get('gps') == 1:
        functionality_text += "‚Ä¢ üó∫Ô∏è GPS-–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ\n"
    else:
        functionality_text += "‚Ä¢ üö´ –ë–µ–∑ GPS-–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è\n"

    functionality_text += "\n–ò—Å—Ö–æ–¥—è –∏–∑ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å:\n\n"

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –∏ —Ç–æ—á–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
    for system in recommended:
        brand_icon = "üêº" if system['brand'] == 'pandora' or 'pandect' in system['name'].lower() else "‚≠ê"

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        characteristics = []
        if system['autostart'] == 1:
            characteristics.append("–∞–≤—Ç–æ–∑–∞–ø—É—Å–∫")
        if system['brelok'] == 1:
            characteristics.append("–±—Ä–µ–ª–æ–∫")
        if system['gsm'] == 1:
            characteristics.append("GSM-—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
        if system['gps'] == 1:
            characteristics.append("GPS")

        functionality_text += (
            f"{brand_icon} <b>{system['name']}</b>\n"
            f"‚Ä¢ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {', '.join(characteristics)}\n"
            f"‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å: {system['price']}\n"
            f"‚Ä¢ –°—Å—ã–ª–∫–∞: {system['link']}\n\n"
        )

    # –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    functionality_text += (
        "–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ —Ç–≤–æ–π –∞–≤—Ç–æ?üí∞\n\n"
        "–û—Å—Ç–∞–≤—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –Ω–∞—à –º–∞—Å—Ç–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π üìû\n\n"
        "–ú—ã –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ Pandora –∏ StarLine –≤ –°–∞–º–∞—Ä–µ üë®üèª‚Äçüîß\n\n"
        "–£ –Ω–∞—Å –¥–≤–∞ —Ñ–∏–ª–∏–∞–ª–∞ üè¢ –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é ‚úçüèª\n"
        "–ë—É–¥–µ–º —Ä–∞–¥—ã –ø–æ–º–æ—á—å\n\n"
        "üìç—É–ª. –§–∞–¥–µ–µ–≤–∞, 51–ê\n"
        "@ya7fadeeva_bot\n\n"
        "üìç–ú–æ—Å–∫–æ–≤—Å–∫–æ–µ —à., 16 –∫–º, 1–ê\n"
        "@ya7moskva_bot"
    )

    context.user_data['bot_data'] = ", ".join([sys['name'] for sys in recommended])

    update.message.reply_text(functionality_text, parse_mode='HTML', disable_web_page_preview=True)
    update.message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        reply_markup=ReplyKeyboardMarkup(
            [[KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä", request_contact=True)]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
    )
    return PHONE


def get_phone(update: Update, context: CallbackContext) -> int:
    if update.message.contact:
        phone_number = update.message.contact.phone_number
    else:
        phone_number = update.message.text

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É
    form_handler = SimpleFormHandler(FORM_URL)
    success, message = form_handler.submit_phone_only(phone_number)

    if success:
        update.message.reply_text(
            "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã. –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏!",
            reply_markup=ReplyKeyboardMarkup(
                [["üîÑ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Å–∏—Å—Ç–µ–º—É"]],
                resize_keyboard=True,
                one_time_keyboard=True
            )
        )
    else:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã: {message}")
        update.message.reply_text(
            "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä –ø—Ä–∏–Ω—è—Ç. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ —Å–∫–æ—Ä–æ.",
            reply_markup=ReplyKeyboardMarkup(
                [["üîÑ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Å–∏—Å—Ç–µ–º—É"]],
                resize_keyboard=True,
                one_time_keyboard=True
            )
        )

    return RESTART


def restart_choice(update: Update, context: CallbackContext) -> int:
    text = update.message.text
    if text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ" or text == "üîÑ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Å–∏—Å—Ç–µ–º—É":
        return start(update, context)

    update.message.reply_text(
        "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–æ—Ä–∞ —Å–∏—Å—Ç–µ–º—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start",
        reply_markup=ReplyKeyboardMarkup([[]], resize_keyboard=True)
    )
    return ConversationHandler.END


def cancel(update: Update, context: CallbackContext) -> int:
    update.message.reply_text(
        '–î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start',
        reply_markup=ReplyKeyboardMarkup([[]], resize_keyboard=True)
    )
    context.user_data.clear()
    return ConversationHandler.END


def main() -> None:
    # –°–æ–∑–¥–∞–µ–º Updater –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    updater = Updater(BOT_TOKEN, use_context=True)

    # –ü–æ–ª—É—á–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dp = updater.dispatcher

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞ (ConversationHandler)
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            AUTO_START: [MessageHandler(Filters.text & ~Filters.command, autostart_choice)],
            CONTROL: [MessageHandler(Filters.text & ~Filters.command, control_choice)],
            GPS: [MessageHandler(Filters.text & ~Filters.command, gps_choice)],
            PHONE: [
                MessageHandler(Filters.contact, get_phone),
                MessageHandler(Filters.text & ~Filters.command, get_phone)
            ],
            RESTART: [
                MessageHandler(Filters.text & ~Filters.command, restart_choice)
            ],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    dp.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()